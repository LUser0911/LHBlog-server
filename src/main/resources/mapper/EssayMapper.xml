<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.blog.dao.EssayMapper">

    <resultMap id="BaseResultMap" type="com.lh.blog.po.Essay">
            <id property="essayId" column="essay_id" jdbcType="BIGINT"/>
            <result property="essayTitle" column="essay_title" jdbcType="VARCHAR"/>
            <result property="essayIntroduce" column="essay_introduce" jdbcType="VARCHAR"/>
            <result property="essayCover" column="essay_cover" jdbcType="VARCHAR"/>
            <result property="essayContent" column="essay_content" jdbcType="VARCHAR"/>
            <result property="browseCount" column="browse_count" jdbcType="BIGINT"/>
            <result property="commentCount" column="comment_count" jdbcType="BIGINT"/>
            <result property="createTime" column="l_create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="l_update_time" jdbcType="TIMESTAMP"/>
            <result property="delFlag" column="l_del_flag" jdbcType="CHAR"/>
            <collection property="essayLabels" ofType="label">
                <id column="label_id" property="labelId" jdbcType="BIGINT"/>
                <result column="label_name" property="labelName" jdbcType="VARCHAR"/>
                <result column="label_background" property="labelBackground" jdbcType="VARCHAR"/>
                <result column="label_color" property="labelColor" jdbcType="VARCHAR"/>
                <result column="ll_create_time" property="createTime" jdbcType="TIMESTAMP"/>
                <result column="ll_update_time" property="updateTime" jdbcType="TIMESTAMP"/>
                <result column="is_stored" property="isStored" jdbcType="CHAR"/>
                <result column="ll_del_flag" property="delFlag" jdbcType="CHAR"/>
            </collection>
    </resultMap>
    
    <sql id="base_column_three">
        le.essay_id,le.essay_title,le.essay_introduce,
        le.essay_cover,le.essay_content,le.browse_count,
        le.comment_count,le.create_time as l_create_time,le.update_time asl_update_time,
        le.del_flag as l_del_flag
    </sql>

    <select id="selectLabel" resultType="label">
        select
        ll.label_id,ll.label_name,ll.label_background,ll.label_color,ll.create_time as ll_create_time,
        ll.update_time as ll_update_time,ll.is_stored,ll.del_flag as ll_del_flag
        from lh_label ll
        left join lh_essay_label lel on ll.label_id = lel.label_id
        <where>
            <if test="labels != null">
                ll.label_name in
                <foreach collection="labels" item="labelName" separator="," open="(" close=")">
                    #{labelName}
                </foreach>
            </if>
        </where>
    </select>

    <select id="queryByComplexConditionAndCustomPagination" resultMap="BaseResultMap">
        select
        le.essay_id,le.essay_title,le.essay_introduce,
        le.essay_cover,le.essay_content,le.browse_count,
        le.comment_count,le.create_time as l_create_time,le.update_time as l_update_time,
        le.del_flag as l_del_flag,
        ll.label_id,ll.label_name,ll.label_background,ll.label_color,ll.create_time as ll_create_time,
        ll.update_time as ll_update_time,ll.is_stored,ll.del_flag as ll_del_flag
        from
        (
        select * from lh_essay
        <where>
            <if test="publishDatetime != null">
                and create_time between #{publishDatetime[0]} and #{publishDatetime[1]}
            </if>
            and browse_count between #{minBrowseCount} and #{maxBrowseCount}
            and comment_count between #{minCommentCount} and #{maxCommentCount}
        </where>
        limit #{pageNum},#{pageSize}
        )
        le
        left join lh_essay_label lel on le.essay_id = lel.essay_id
        left join lh_label ll on lel.label_id = ll.label_id
        <where>
            <if test="labels != null">
                ll.label_name in
                <foreach collection="labels" item="labelName" separator="," open="(" close=")">
                    #{labelName}
                </foreach>
            </if>
        </where>
    </select>


    <select id="queryByComplexCondition" resultMap="BaseResultMap">
        select
        <include refid="base_column_three"/>
        from lh_essay le
        left join lh_essay_label lel on le.essay_id = lel.essay_id
--         left join lh_label ll on lel.label_id = ll.label_id
        <where>
            <if test="publishDatetime != null">
                and le.create_time between #{publishDatetime[0]} and #{publishDatetime[1]}
            </if>
            and le.browse_count between #{minBrowseCount} and #{maxBrowseCount}
            and le.comment_count between #{minCommentCount} and #{maxCommentCount}
        </where>
    </select>

    <select id="getArchiveEssayBySpecificYearMonth" resultMap="BaseResultMap">
        select
        <include refid="base_column_three"/>
        from
        (select  * from lh_essay where year(create_time) = #{year} and month(create_time) = #{month}) le
        left join lh_essay_label lel on le.essay_id = lel.essay_id
        left join lh_label ll on lel.label_id = ll.label_id
    </select>

    <select id="getLatestDate" resultType="date">
        select create_time from lh_essay order by essay_id desc limit 0,1
    </select>

    <select id="getPastestDate" resultType="date">
        select create_time from lh_essay limit 0,1
    </select>

    <select id="getEssayByLabelNamesAndPagination" resultMap="BaseResultMap">
        select
        le.essay_id,le.essay_title,le.essay_introduce,
        le.essay_cover,le.essay_content,le.browse_count,
        le.comment_count,le.create_time as l_create_time,le.update_time as l_update_time,
        le.del_flag as l_del_flag,
        ll.label_id,ll.label_name,ll.label_background,ll.label_color,ll.create_time as ll_create_time,
        ll.update_time as ll_update_time,ll.is_stored,ll.del_flag as ll_del_flag
        from lh_essay le
        left join lh_essay_label lel on le.essay_id = lel.essay_id
        left join lh_label ll on lel.label_id = ll.label_id
        <where>
            <if test="labelNames != null">
                ll.label_name in
                <foreach collection="labelNames" item="labelName" separator="," open="(" close=")">
                    #{labelName}
                </foreach>
            </if>
        </where>
    </select>

    <update id="incrementBrowseCount" parameterType="long">
        update lh_essay set browse_count = browse_count + 1 where essay_id = #{essayId}
    </update>

    <select id="getLatestEssayId" resultType="long">
        select essay_id from lh_essay
        order by essay_id desc limit 0 ,1
    </select>

    <sql id="Base_Column_List">
        essay_id,essay_title,essay_introduce,
        essay_cover,essay_content,browse_count,
        comment_count,create_time,update_time,
        del_flag
    </sql>
</mapper>
